// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`displayer should match the snapshot 1`] = `
Array [
  <View
    animatedStyle={
      Object {
        "value": Object {
          "opacity": 0,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.25)",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="animated-displayer-bg"
  />,
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
              "position": "absolute",
            }
          }
        >
          <SvgMock
            color="white"
            height={25}
            width={25}
          />
        </View>
        <Text
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "white",
              "fontSize": 12,
              "opacity": 0,
              "position": "absolute",
              "textAlign": "center",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          0 sec
        </Text>
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
                "transform": Array [
                  Object {
                    "scale": 0.1,
                  },
                ],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 50,
              "height": 100,
              "opacity": 0,
              "position": "absolute",
              "transform": Array [
                Object {
                  "scale": 0.1,
                },
              ],
              "width": 100,
            }
          }
        />
      </View>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {
            "opacity": 0,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "opacity": 0,
        }
      }
      testID="animated-displayer"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 60,
              "justifyContent": "center",
              "width": 60,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [
                    Object {
                      "scale": 1,
                    },
                  ],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 1,
                  },
                ],
              }
            }
            testID="rn-video-play-button"
          >
            <SvgMock
              height={50}
              testID="play-icon"
              width={50}
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
              "position": "absolute",
            }
          }
        >
          <SvgMock
            color="white"
            height={25}
            width={25}
          />
        </View>
        <Text
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "white",
              "fontSize": 12,
              "opacity": 0,
              "position": "absolute",
              "textAlign": "center",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          0 sec
        </Text>
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
                "transform": Array [
                  Object {
                    "scale": 0.1,
                  },
                ],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 50,
              "height": 100,
              "opacity": 0,
              "position": "absolute",
              "transform": Array [
                Object {
                  "scale": 0.1,
                },
              ],
              "width": 100,
            }
          }
        />
      </View>
    </View>
  </View>,
]
`;
